plugins {
    id 'java-library'
    id 'idea'
    id 'java'
    id 'jacoco'
    id 'checkstyle'
}

group = 'com.test.ci'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '1.8'

idea {
    project {
        vcs = 'Git'
    }
    module {
        jdkName = '1.8'
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
    maven {
        url 'https://maven.aliyun.com/repository/central'
    }
    jcenter()
}

dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.2")
    testImplementation "org.assertj:assertj-core:3.9.1"
}

checkstyle {
    ignoreFailures = false
    toolVersion = 8.27
    configFile file("$project.rootDir/config/checkstyle/checkstyle.xml")
    sourceSets = [sourceSets.main]
}

checkstyleTest.enabled = false

jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled = false
        csv.enabled = false
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/AppRunner.class'
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            excludes = [
                    '**.AppRunner'
            ]

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 1
            }
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 1
            }
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 1
            }
            limit {
                counter = 'CLASS'
                value = 'COVEREDRATIO'
                minimum = 1
            }
        }
    }
}
check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn jacocoTestReport